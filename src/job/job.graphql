scalar DateTime
scalar ConnectionCursor

type Job {
  id: Int!
  label: String!
  about_job: String
  key_responsibilities: [String]
  education: String
  preferred_qualifications: [String]
  skills: [Skill]!
  job_type: [Jobtype]!
  show_organization_details: Boolean
  publish_status: JobPublishStatus
  receive_application_from: DateTime
  receive_application_to: DateTime
  created_at: DateTime!
  updated_at: DateTime!
}

enum JobPublishStatus {
  draft
  published
  archived
}

input CreateJobInput {
  label: String!
  about_job: String
  key_responsibilities: [String]
  education: String
  preferred_qualifications: [String]
  skills: [Int]
  job_type: [Int]
  show_organization_details: Boolean
  publish_status: JobPublishStatus
  receive_application_from: DateTime
  receive_application_to: DateTime
}

input UpdateJobInput {
  id: Int!
  label: String
  about_job: String
  key_responsibilities: [String]
  education: String
  preferred_qualifications: [String]
  skills: [Int]
  job_type: [Int]
  show_organization_details: Boolean
  publish_status: JobPublishStatus
  receive_application_from: DateTime
  receive_application_to: DateTime
}

type PageInfo {
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: ConnectionCursor
  endCursor: ConnectionCursor
}

type JobConnection {
  pageInfo: PageInfo!
  edges: [JobEdge]!
}

type JobEdge {
  cursor: ConnectionCursor!
  node: Job!
}

input Paging {
  first: Int
  last: Int
  after: ConnectionCursor
  before: ConnectionCursor
}

type Query {
  jobs(paging: Paging): JobConnection!
  job(id: Int!): Job
}

type Mutation {
  createJob(createJobInput: CreateJobInput!): Job!
  updateJob(updateJobInput: UpdateJobInput!): Job!
  removeJob(id: Int!): Job
}
